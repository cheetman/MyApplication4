package com.example.sychiprpclibmcc.rpc.test;import java.lang.reflect.Type;import java.text.DecimalFormat;import java.util.ArrayList;import java.util.List;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import com.google.gson.JsonElement;import com.google.gson.JsonPrimitive;import com.google.gson.JsonSerializationContext;import com.google.gson.JsonSerializer;import com.example.sychiprpclibmcc.bean.EventParam;import com.example.sychiprpclibmcc.bean.RepLanIpGw;import com.example.sychiprpclibmcc.kit.ULTIConfigSync;import com.example.sychiprpclibmcc.kit.ULTIConfigSync.RpcConfigSyncIf;import com.example.sychiprpclibmcc.rep.RepCTRSchTaskListGet;import com.example.sychiprpclibmcc.rep.RepCTRSchTaskListGet.RpcScheduler;import com.example.sychiprpclibmcc.rep.RepCommonResult;import com.example.sychiprpclibmcc.rep.RepDMRACGet;import com.example.sychiprpclibmcc.rep.RepDMRACSpecDataGet;import com.example.sychiprpclibmcc.rep.RepDMRBatScan;import com.example.sychiprpclibmcc.rep.RepDMREsGet.RpcEsData;import com.example.sychiprpclibmcc.rep.RepDMREsGet;import com.example.sychiprpclibmcc.rep.RepDMRFHGet;import com.example.sychiprpclibmcc.rep.RepDMRFHSpecDataGet;import com.example.sychiprpclibmcc.rep.RepDMRIRExFuncListGet;import com.example.sychiprpclibmcc.rep.RepDMRLevelGet;import com.example.sychiprpclibmcc.rep.RepDMROnOffGet;import com.example.sychiprpclibmcc.rep.RepDMRPing;import com.example.sychiprpclibmcc.rep.RepSYSDdnsInfoGet;import com.example.sychiprpclibmcc.rep.RepSYSGwInfoGet;import com.example.sychiprpclibmcc.rep.RepUSMAuth;import com.example.sychiprpclibmcc.rep.RepUSMGnUserListGet;import com.example.sychiprpclibmcc.rep.RepDMRRoomListGet.RpcRoom;import com.example.sychiprpclibmcc.rep.RepDMRScnCfgListGet.RpcSceneCfg;import com.example.sychiprpclibmcc.rep.RepDMRScnGenListGet.RpcSceneGen;import com.example.sychiprpclibmcc.req.ReqCTRSchTaskParamSet;import com.example.sychiprpclibmcc.req.ReqCTRSchTaskParamSet.ParamCTRSchTaskParamSet;import com.example.sychiprpclibmcc.rpc.LogDefault;import com.example.sychiprpclibmcc.rpc.LogIf;import com.example.sychiprpclibmcc.rpc.PlatForm;import com.example.sychiprpclibmcc.rpc.RpcCallBackIf;import com.example.sychiprpclibmcc.rpc.RpcCommand;import com.example.sychiprpclibmcc.rpc.RpcCommand.SchedulerOption;import com.example.sychiprpclibmcc.rpc.RpcTask;/*** */public class AATestUser {	private static int iNo = 100;	private static LogIf log = new LogDefault();	public static final int IdAuth = ++iNo;	public static final int IdAuth1 = ++iNo;	public static final int IdAuth2 = ++iNo;	public static ULTIConfigSync rpcConfig;	private static Gson getDoubleGson() {		Gson gson = new GsonBuilder().registerTypeAdapter(Double.class, new JsonSerializer<Double>() {			@Override			public JsonElement serialize(Double src, Type arg1, JsonSerializationContext arg2) {				if (src.isNaN() || src.isInfinite()) {					return null;				} else {					return new JsonPrimitive(new DecimalFormat("#").format(src));				}			}		}).create();		return gson;	}	static RpcCallBackIf callback = new RpcCallBackIf() {		@Override		public void ssdpCallBack(RepLanIpGw rep) {			// TODO Auto-generated method stub			log.logErr("discoverIpGwInLanCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void connected(boolean isConnected) {			// TODO Auto-generated method stub			log.logErr("connected-------   " + isConnected);			if (isConnected) {				test();			}		}		@Override		public void disconnected() {			// TODO Auto-generated method stub		}		@Override		public void authenCallBack(RepUSMAuth rep) {			log.logErr("authenCallBack-------   " + getDoubleGson().toJson(rep));			rpcConfig = ULTIConfigSync.getInstance();		}		@Override		public void getIpGwInfoCallBack(RepSYSGwInfoGet rep) {			// TODO Auto-generated method stub			log.logErr("getIpGwInfoCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void setEcOptionCallBack(RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void addUserCallBack(RepCommonResult rep) {			log.logErr("addUserCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void changeUserCallBack(RepCommonResult rep) {			log.logErr("changeUserCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void resetUserCallBack(RepCommonResult rep) {			log.logErr("resetUserCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void delUserCallBack(RepCommonResult rep) {			log.logErr("delUserCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void getUserListCallBack(RepUSMGnUserListGet rep) {			log.logErr("getUserListCallBack-------   " + getDoubleGson().toJson(rep));		}		@Override		public void getRoomListCallBack(List<RpcRoom> list) {		}		@Override		public void getScnCfgListCallBack(int devId, List<RpcSceneCfg> list) {			// TODO Auto-generated method stub		}		@Override		public void eventUSMEVTOffline(EventParam param) {			// TODO Auto-generated method stub		}		@Override		public void discoverNetworkCallBack(RepCTRSchTaskListGet rep) {			// TODO Auto-generated method stub		}		@Override		public void pingCallBack(RepDMRPing rep) {			// TODO Auto-generated method stub		}		@Override		public void addSceneDeviceCallBack(int scnId, int devId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void delSceneDeviceCallBack(int scnId, int devId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void recallSceneCallBack(int scnId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void sceneOperateCallBack(RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void getOnOffCallBack(int devId, RepDMROnOffGet rep) {			// TODO Auto-generated method stub		}		@Override		public void setOnOffTogCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void getLevelCallBack(int devId, RepDMRLevelGet rep) {			// TODO Auto-generated method stub		}		@Override		public void setLevelCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void moveCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void stopCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void sendIrCodeCallBack(RepCommonResult rep) {			// TODO Auto-generated method stub		}		@Override		public void operSchedulerCallBack(int schTaskId, RepCommonResult scheduler) {			// TODO Auto-generated method stub		}		@Override		public void exceptionCallBack(Exception ex, EventParam param) {			// TODO Auto-generated method stub		}		@Override		public void networkConnectedCallBack() {			// TODO Auto-generated method stub		}		@Override		public void getIRExFuncListCallBack(int devId, RepDMRIRExFuncListGet rep) {			// TODO Auto-generated method stub		}		@Override		public void getScnGenListCallBack(List<RpcSceneGen> list) {			// TODO Auto-generated method stub		}		@Override		public void eventDMREVTLowBat(EventParam param) {			// TODO Auto-generated method stub		}		@Override		public void scanBatteryCallBack(RepDMRBatScan rep) {		}		@Override		public void eventDMREVTLevel(EventParam param) {			// TODO Auto-generated method stub		}		@Override		public void eventDMREVTOnOff(EventParam param) {			// TODO Auto-generated method stub		}		@Override		public void eventCTREVTSchStat(EventParam evtParam) {			// TODO Auto-generated method stub		}		@Override		public void getSchedulerListCallBack(List<RpcScheduler> list) {			// TODO Auto-generated method stub		}		@Override		public void clearSchedulerCallBack(int schTaskId, RepCommonResult scheduler) {			// TODO Auto-generated method stub		}		@Override		public void setSchedulerParamCallBack(int schTaskId, RepCommonResult scheduler) {			// TODO Auto-generated method stub			log.logErr("setSchedulerParamCallBack-------   " + getDoubleGson().toJson(scheduler));		}		@Override		public void getACCallBack(int devId, RepDMRACGet rep) {			// TODO Auto-generated method stub					}		@Override		public void ctrlACCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub					}		@Override		public void getFHCallBack(int devId, RepDMRFHGet rep) {			// TODO Auto-generated method stub					}		@Override		public void ctrlFHCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub					}		@Override		public void setSceneNameCallBack(int scnId, RepCommonResult rep) {			// TODO Auto-generated method stub					}		@Override		public void getACSpecDataCallBack(int devId, RepDMRACSpecDataGet rep) {			// TODO Auto-generated method stub					}		@Override		public void getFHSpecDataCallBack(int devId, RepDMRFHSpecDataGet rep) {			// TODO Auto-generated method stub					}		@Override		public void setDeviceNameCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub					}		@Override		public void eventDMREVTFH(EventParam evtParam) {			// TODO Auto-generated method stub					}		@Override		public void eventDMREVTAC(EventParam evtParam) {			// TODO Auto-generated method stub					}		@Override		public void getDeviceListCallBack(				List<com.example.sychiprpclibmcc.bean.RpcDevice> list) {			// TODO Auto-generated method stub					}		@Override		public void getDeviceScnNumListCallBack(				List<com.example.sychiprpclibmcc.bean.RpcDevice> list) {			// TODO Auto-generated method stub					}		@Override		public void getEsListCallBack(List<RpcEsData> list, RepDMREsGet rep) {			// TODO Auto-generated method stub					}		@Override		public void bgmCtrlCallBack(int devId, RepCommonResult rep) {			// TODO Auto-generated method stub					}		@Override		public void eventDMREVTES(EventParam evtParam) {			// TODO Auto-generated method stub					}		@Override		public void getDdnsInfoCallBack(RepSYSDdnsInfoGet rep) {			// TODO Auto-generated method stub					}	};	private static void sleep() {		try {			Thread.sleep(1000);		} catch (InterruptedException e) {		}	}	static int runTimes = 0;	public static void main(String[] args) throws Exception {				RpcCommand.init(PlatForm.Android, callback, 5);		RpcCommand.getInstance().connect("192.168.40.110", 55700);		RpcCommand.getInstance().setShowLog(true, null);		sleep();		//		// try {		// RpcCommand.getInstance().discoverIpGwInLan(null,		// InetAddress.getByName("255.255.255.255"));		// } catch (UnknownHostException e1) {		// // TODO Auto-generated catch block		// e1.printStackTrace();		// }		System.out.println("**************************************************");	}	public static void test() {		RpcCommand.getInstance().authen("installer", "installer", "installer");		RpcCommand.getInstance().delUser("111111");		 RpcCommand.getInstance().addUser("111111", "111111");		 sleep();		 RpcCommand.getInstance().delUser("222222");		 RpcCommand.getInstance().addUser("222222", "222222");		 sleep();		 RpcCommand.getInstance().addUser("333333", "333333");		 sleep();		 RpcCommand.getInstance().addUser("444444", "444444");		 sleep();		 RpcCommand.getInstance().addUser("555555", "555555");		 sleep();		 RpcCommand.getInstance().addUser("666666", "666666");	}}